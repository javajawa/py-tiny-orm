# SPDX-FileCopyrightText: 2020 Benedict Harcourt <ben.harcourt@harcourtprogramming.co.uk>
#
# SPDX-License-Identifier: CC0-1.0
# vim: expandtab ts=2 nospell

name: Lint + Build + Publish

on:
  push:
    branches:
      - mainline
  pull_request:
  release:
    types:
      - published

env:
  SOURCES: orm examples tests setup.py

jobs:
  reuse-lint:
    name: Check Reuse Compliance
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: REUSE Compliance Check
      uses: fsfe/reuse-action@v1.1

  py-lint:
    name: Lint Python code
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7

    - name: Load Depedency Cache
      id: cache
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements*.txt') }}
        restore-keys: ${{ runner.os }}-pip-

    - name: Install dependencies
      run:  pip install -r requirements-dev.txt

    - name: Run PyLint
      run: pylint ${{ env.SOURCES }} | python .github/workflows/pylint_to_gh_action.py


  python-lint:
    name: Lint Python code
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7

    - name: Load Depedency Cache
      id: cache
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements*.txt') }}
        restore-keys: ${{ runner.os }}-pip-

    - name: Install dependencies
      run:  pip install -r requirements-dev.txt

    - name: Run Linters
      if: github.event_name != 'release'
      uses: samuelmeuli/lint-action@v1
      with:
        github_token: ${{ secrets.github_token }}

        black:     true
        flake8:    true
        mypy:      true
        mypy_args: --strict

        continue_on_error: false


  pytest:
    name: Run Python Tests
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python: [3.7, 3.8, 3.9]

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Python ${{ matrix.python }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python }}

    - name: Load Depedency Cache
      id: cache
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements*.txt') }}
        restore-keys: ${{ runner.os }}-pip-

    - name: Install dependencies
      run:  pip install -r requirements-dev.txt

    - run: pwd

    - name: Run Linters
      run: coverage run "--context=${{ matrix.os }} python ${{ matrix.python }}" -m unittest discover tests '*_test.py'

    - name: Upload coverage result
      uses: actions/upload-artifact@v2
      with:
        name: coverage-${{ matrix.os }}-${{ matrix.python }}
        path: .coverage


  coverage:
    name: Review Coverage information
    runs-on: ubuntu-latest
    needs: pytest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7

    - name: Install coverage
      run:  pip install coverage toml

    - name: Get data
      uses: actions/download-artifact@v2

    - name: Combine coverage info
      run: |
        coverage combine coverage-*/.coverage

    - name: Report
      run: |
        coverage html --fail-under=0

    - name: Upload HTML report
      uses: actions/upload-artifact@v2
      with:
        name: coverage html
        path: htmlcov

    - name: Report
      run: |
        coverage report


  build:
    name: Build package
    runs-on: ubuntu-latest

    needs:
      - py-lint
      - python-lint
      - pytest
      - reuse-lint

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7

    - name: Load Depedency Cache
      id: cache
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements*.txt') }}
        restore-keys: ${{ runner.os }}-pip-

    - name: Install dependencies
      run:  pip install -r requirements-dev.txt

    - name: Build distribution
      run:  ./setup.py sdist bdist_wheel

    - name: "Archive 'wheel' artifacts"
      uses: actions/upload-artifact@v2
      with:
        name: py_tiny_orm.whl
        path: dist/*.whl

    - name: "Archive 'sdist' artifacts"
      uses: actions/upload-artifact@v2
      with:
        name: py_tiny_orm.tar.gz
        path: dist/*.tar.gz

    - name: Publish a Python distribution to PyPI
      if: github.event_name == 'release' && startsWith(github.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@master
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
